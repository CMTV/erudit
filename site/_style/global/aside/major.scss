@use 'def/size';

@use 'partial/hover';
@use 'partial/scroll';
@use 'partial/logo';
@use 'partial/util';

#__erudit > aside.major
{
    // Pane Switcher Sizes

    $buttonSize: 40px;
    $buttonGap: size.$gap;

    //

    .full
    {
        display: flex;
        flex-direction: column;

        //
        // Site Info
        //

        > .siteInfo
        {
            display: grid;
            grid-template-columns: 50px auto;
            grid-template-rows: auto auto;
            column-gap: size.$gap;
            user-select: none;

            padding: size.$gap;

            border-bottom: 1px solid var(--c_border);

            > .logo
            {
                grid-row: 1 / 3;
                align-self: center;

                @include util.size(50px);
                @include logo.style;
            }

            > .title
            {
                font-weight: bold;
                font-size: 20px;

                > a { @extend %underline; }
            }

            > .slogan
            {
                color: var(--c_text-muted);
            }
        }

        //
        // Pane Switcher
        //

        > .paneSwitcher
        {
            $sliderHeight: 3px;
            
            //

            border-bottom: 1px solid var(--c_border);

            > .inner
            {
                position: relative;
                width: calc(5 * ($buttonSize + $buttonGap));
                margin: 0 auto;

                > button
                {
                    position: relative;
                    padding: calc($buttonGap / 2);
                    background: transparent;

                    color: var(--c_text-muted);
                    @include hover.color(var(--c_text), true);

                    &[data-target=toc] { > .inner > i { transform: rotateZ(-90deg); } }

                    &::after
                    {
                        content: "";
                        position: absolute;
                        left: calc($buttonGap / 2); bottom: -1px; right: calc($buttonGap / 2);
                        height: 3px;
                        background: var(--c_border);
                        opacity: 0;
    
                        @include util.transition(opacity);
                    }

                    &:hover::after { opacity: 1; }

                    > .inner
                    {
                        @include util.flexCC;
                        @include util.size($buttonSize);
                        font-size: 22px;
                    }
                }

                > .slider
                {
                    position: absolute;
                    bottom: -1px;
                    z-index: 5;
                    background: var(--c_text-muted);
                    @include util.size($buttonSize, $sliderHeight);
                    @include util.transition(left);
                }
            }
        }

        //
        // Panes
        //

        > .panes
        {
            flex: 1;
            position: relative;

            > .pane
            {
                position: absolute;
                left: 0;
                top: 0;
                @include util.size(size.$aside, 100%);
                
                opacity: 1;
                @include util.transition(left, opacity);

                direction: rtl;
                overflow: auto;
                @extend %scrollbar;
                > .inner { direction: ltr; }
            }
        }
    }

    .mini
    {
        display: flex;
        flex-direction: column;

        > *
        {
            @include util.flexCC;
            @include util.size(size.$asideMini);
            font-size: 25px;
            color: var(--c_text-dimmed);
            background: transparent;
            //border-bottom: 1px solid var(--c_border);

            @include util.transition(background, color);

            &:not(.menu)[data-target=toc] { > i { transform: rotateZ(-90deg); } }

            &:hover
            {
                cursor: pointer;
                color: var(--c_text);
                background: var(--c_bg-content-accent);
            }

            &:nth-child(1)
            {
                @include logo.style;

                &:hover svg > path { fill: var(--c_bg-content-accent); }

                svg
                {
                    @include util.size(35px);
                    > path
                    {
                        @include util.transition(fill);
                    }
                }
            }
        }

        @media (max-height: 480px)
        {
            > button:not(.menu) { display: none; }
        }

        @media (min-height: 481px)
        {
            > button.menu { display: none; }
        }
    }

    //
    // Current Pane Logic
    //

    $panes: toc, pages, search, language, other;

    @for $i from 1 through length($panes)
    {
        $pane: nth($panes, $i);

        &[data-pane=#{$pane}]
        {
            .full > .paneSwitcher > .inner
            {
                > button[data-target=#{$pane}]
                {
                    color: var(--c_text);
                }

                > .slider
                {
                    left: calc((($i - 1) * ($buttonSize + $buttonGap)) + ($buttonGap / 2));
                }
            }

            .full > .panes
            {
                > .pane:not([data-pane=#{$pane}]) { opacity: 0; left: -1 * size.$aside; }
                > .pane[data-pane=#{$pane}] ~ .pane { left: size.$aside; }
            }
        }
    }
}