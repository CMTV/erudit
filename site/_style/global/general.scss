@use 'def/color';
@use 'def/size';
@use 'def/bp';

@use 'partial/util';

//
// Reset
//

*
{
    margin: 0;
    padding: 0;
    border: none;
    box-sizing: border-box;
}

input, select, textarea, button { font-family: inherit; }

ul, ol { list-style-position: inside; }

//
// Base layout
//

body
{
    font-family: "Open Sans", sans-serif;
    //letter-spacing: -0.02em;
    color: var(--c_text);
    background: var(--c_bg);
}

#__erudit
{
    --w_asideMajor: #{size.$aside};
    --w_asideMinor: #{size.$aside};
    --w_content:    min(#{size.$content} + 2 * #{size.$gapBig}, 100%);

    position: relative;
    display: grid;

    grid-template-columns: var(--w_asideMajor) var(--w_content) var(--w_asideMinor);
    grid-template-areas: "aMajor main aMinor";
    justify-content: center;

    @include util.transition(grid-template-columns);

    > main
    {
        grid-area: main;
    }

    > aside
    {
        &.major { grid-area: aMajor; }
        &.minor { grid-area: aMinor; }

        > .asideContent
        {
            position: sticky;
            top: 0;
            height: 100vh;
            height: 100dvh;
            overflow: hidden;
        }
    }

    @include bp.max(miniMajor) { --w_asideMajor: #{size.$asideMini}; }
    @include bp.max(miniMinor) { --w_asideMinor: #{size.$asideMini}; }

    @include bp.max(noAside)
    {
        --w_asideMajor: 0;
        --w_asideMinor: 0;
    }
}

#__erudit > main
{
    z-index: 5;
    min-height: 100vh;

    display: flex;
    flex-direction: column;

    background: var(--c_bg-content);
    box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, .05);

    @include util.transition(margin);

    &::after
    {
        content: "";
        position: absolute;
        left: 0; top: 0;
        z-index: 4;
        height: 100%;
        width: 100%;
        background: var(--c_bg-content);

        opacity: 0;
        @include util.transition(opacity);

        pointer-events: none;
        touch-action: none;
    }

    > .expand { flex: 1; }

    > .bottomSticky
    {
        position: sticky;
        bottom: 0;
        z-index: 5;
        pointer-events: none;
        touch-action: none;
    }
}

.loading
{
    animation: loading .5s infinite alternate;
    @keyframes loading
    {
        from    { color: var(--c_text-dimmed); }
        to      { color: var(--c_text-disabled); }
    }
}